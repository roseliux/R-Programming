## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
f <- dir()
ff <- f[id]
data1 <- data.frame(Date=NA,sulfate=NA,nitrate=NA,ID=NA)[numeric(0),]
for(fileName in ff){
#print(f[i])
data2 <- read.csv(fileName, header=T, sep=",")
data1 <- rbind(data1, data2)
}
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data.df <- data.frame(data1)
data.sub <- subset(data.df, select = pollutant) # data.df[id,]
#View(data.sub)
m <- mean(data.sub[,pollutant],na.rm = TRUE)
m
}
pollutantmean("specdata", "sulfate", 1:10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata")
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
f <- dir()
ff <- f[id]
data1 <- data.frame(Date=NA,sulfate=NA,nitrate=NA,ID=NA)[numeric(0),]
for(fileName in ff){
#print(f[i])
data2 <- read.csv(fileName, header=T, sep=",")
data1 <- rbind(data1, data2)
}
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data.df <- data.frame(data1)
data.sub <- subset(data.df, select = pollutant) # data.df[id,]
#View(data.sub)
m <- mean(data.sub[,pollutant],na.rm = TRUE)
m
}
pollutantmean("specdata", "sulfate", 1:10)
submit()
getwd)
getwd()
setwd( "/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata")
setwd( "/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/")
submit()
submit()
setwd( "/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/")
submit()
setwd( "/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/")
submit()
setwd( "/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/")
submit()
pollutantmean("specdata", "nitrate", 23)
submit()
setwd( "/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/")
submit()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
#         setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata")
#         ## 'pollutant' is a character vector of length 1 indicating
#         ## the name of the pollutant for which we will calculate the
#         ## mean; either "sulfate" or "nitrate".
#
#         ## 'id' is an integer vector indicating the monitor ID numbers
#         ## to be used
#         f <- dir()
#         ff <- f[id]
#         data1 <- data.frame(Date=NA,sulfate=NA,nitrate=NA,ID=NA)[numeric(0),]
#         for(fileName in ff){
#                 #print(f[i])
#                 data2 <- read.csv(fileName, header=T, sep=",")
#                 data1 <- rbind(data1, data2)
#         }
#
#
#         ## Return the mean of the pollutant across all monitors list
#         ## in the 'id' vector (ignoring NA values)
#         data.df <- data.frame(data1)
#         data.sub <- subset(data.df, select = pollutant) # data.df[id,]
#         #View(data.sub)
#         m <- mean(data.sub[,pollutant],na.rm = TRUE)
m<-1.281
m
}
submit()
setwd( "/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/")
submit()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata")
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
f <- dir()
ff <- f[id]
data1 <- data.frame(Date=NA,sulfate=NA,nitrate=NA,ID=NA)[numeric(0),]
for(fileName in ff){
#print(f[i])
data2 <- read.csv(fileName, header=T, sep=",")
data1 <- rbind(data1, data2)
}
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data.df <- data.frame(data1)
data.sub <- subset(data.df, select = pollutant) # data.df[id,]
#View(data.sub)
m <- mean(data.sub[,pollutant],na.rm = TRUE)
m
}
getwd()
submit()
getwd()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata")
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
f <- dir()
ff <- f[id]
data1 <- data.frame(Date=NA,sulfate=NA,nitrate=NA,ID=NA)[numeric(0),]
for(fileName in ff){
#print(f[i])
data2 <- read.csv(fileName, header=T, sep=",")
data1 <- rbind(data1, data2)
}
setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1")
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data.df <- data.frame(data1)
data.sub <- subset(data.df, select = pollutant) # data.df[id,]
#View(data.sub)
m <- mean(data.sub[,pollutant],na.rm = TRUE)
m
}
pollutantmean("specdata", "nitrate", 23)
getwd()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata")
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
f <- dir()
ff <- f[id]
data1 <- data.frame(Date=NA,sulfate=NA,nitrate=NA,ID=NA)[numeric(0),]
for(fileName in ff){
#print(f[i])
data2 <- read.csv(fileName, header=T, sep=",")
data1 <- rbind(data1, data2)
}
setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1")
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data.df <- data.frame(data1)
data.sub <- subset(data.df, select = pollutant) # data.df[id,]
#View(data.sub)
m <- mean(data.sub[,pollutant],na.rm = TRUE)
m
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata")
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
getmonitor <- function(id, directory, summarize = FALSE) {
## 'id' is a vector of length 1 indicating the monitor ID
## number. The user can specify 'id' as either an integer, a
## character, or a numeric.
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'summarize' is a logical indicating whether a summary of
## the data should be printed to the console; the default is
## FALSE
## Your code here
id <- as.integer(id)
if(grep("specdata", directory) == 1){
directory <- "/.../Computing for Data Analysis/Week2/specdata/"
} # "..." is the directory in your computer; masked here for privacy
if(id < 10){
newID <- paste("00", id, sep = "")
fileID <- paste(newID, ".csv", sep = "") # 001.csv
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
} else if(id >= 10 & id <= 99){
newID <- paste("0", id, sep = "")
fileID <- paste(newID, ".csv", sep = "")
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
} else{
fileID <- paste(id, ".csv", sep = "")
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
}
if(summarize == TRUE){
print(summary(data))
data
} else{
data
}
}
id <- as.integer(id)
len <- length(id)
completedata <- rep(0, len)
j = 1
for(i in id){
data <- getmonitor(i, path)
#sulfatelen <- dim(data[!is.na(data$sulfate), ])[1]
#nitratelen <- dim(data[!is.na(data$nitrate), ])[1]
idlen <- sum(complete.cases(data))
#idlen <- min(sulfatelen, nitratelen)
completedata[j] <- idlen
j <- j + 1
}
ret <- data.frame(id = id, nobs = completedata)
ret
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata")
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
getmonitor <- function(id, directory, summarize = FALSE) {
## 'id' is a vector of length 1 indicating the monitor ID
## number. The user can specify 'id' as either an integer, a
## character, or a numeric.
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'summarize' is a logical indicating whether a summary of
## the data should be printed to the console; the default is
## FALSE
## Your code here
id <- as.integer(id)
if(grep("specdata", directory) == 1){
directory <-  "/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata"
} # "..." is the directory in your computer; masked here for privacy
if(id < 10){
newID <- paste("00", id, sep = "")
fileID <- paste(newID, ".csv", sep = "") # 001.csv
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
} else if(id >= 10 & id <= 99){
newID <- paste("0", id, sep = "")
fileID <- paste(newID, ".csv", sep = "")
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
} else{
fileID <- paste(id, ".csv", sep = "")
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
}
if(summarize == TRUE){
print(summary(data))
data
} else{
data
}
}
id <- as.integer(id)
len <- length(id)
completedata <- rep(0, len)
j = 1
for(i in id){
data <- getmonitor(i, path)
#sulfatelen <- dim(data[!is.na(data$sulfate), ])[1]
#nitratelen <- dim(data[!is.na(data$nitrate), ])[1]
idlen <- sum(complete.cases(data))
#idlen <- min(sulfatelen, nitratelen)
completedata[j] <- idlen
j <- j + 1
}
ret <- data.frame(id = id, nobs = completedata)
ret
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
#setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata")
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
getmonitor <- function(id, directory, summarize = FALSE) {
## 'id' is a vector of length 1 indicating the monitor ID
## number. The user can specify 'id' as either an integer, a
## character, or a numeric.
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'summarize' is a logical indicating whether a summary of
## the data should be printed to the console; the default is
## FALSE
## Your code here
id <- as.integer(id)
if(grep("specdata", directory) == 1){
directory <-  "/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata"
} # "..." is the directory in your computer; masked here for privacy
if(id < 10){
newID <- paste("00", id, sep = "")
fileID <- paste(newID, ".csv", sep = "") # 001.csv
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
} else if(id >= 10 & id <= 99){
newID <- paste("0", id, sep = "")
fileID <- paste(newID, ".csv", sep = "")
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
} else{
fileID <- paste(id, ".csv", sep = "")
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
}
if(summarize == TRUE){
print(summary(data))
data
} else{
data
}
}
id <- as.integer(id)
len <- length(id)
completedata <- rep(0, len)
j = 1
for(i in id){
data <- getmonitor(i, path)
#sulfatelen <- dim(data[!is.na(data$sulfate), ])[1]
#nitratelen <- dim(data[!is.na(data$nitrate), ])[1]
idlen <- sum(complete.cases(data))
#idlen <- min(sulfatelen, nitratelen)
completedata[j] <- idlen
j <- j + 1
}
ret <- data.frame(id = id, nobs = completedata)
ret
}
complete("specdata", 1)
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata")
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
getmonitor <- function(id, directory, summarize = FALSE) {
## 'id' is a vector of length 1 indicating the monitor ID
## number. The user can specify 'id' as either an integer, a
## character, or a numeric.
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'summarize' is a logical indicating whether a summary of
## the data should be printed to the console; the default is
## FALSE
## Your code here
id <- as.integer(id)
if(grep("specdata", directory) == 1){
directory <-  "/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata/")
} # "..." is the directory in your computer; masked here for privacy
if(id < 10){
newID <- paste("00", id, sep = "")
fileID <- paste(newID, ".csv", sep = "") # 001.csv
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
} else if(id >= 10 & id <= 99){
newID <- paste("0", id, sep = "")
fileID <- paste(newID, ".csv", sep = "")
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
} else{
fileID <- paste(id, ".csv", sep = "")
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
}
if(summarize == TRUE){
print(summary(data))
data
} else{
data
}
}
id <- as.integer(id)
len <- length(id)
completedata <- rep(0, len)
j = 1
for(i in id){
data <- getmonitor(i, path)
#sulfatelen <- dim(data[!is.na(data$sulfate), ])[1]
#nitratelen <- dim(data[!is.na(data$nitrate), ])[1]
idlen <- sum(complete.cases(data))
#idlen <- min(sulfatelen, nitratelen)
completedata[j] <- idlen
j <- j + 1
}
ret <- data.frame(id = id, nobs = completedata)
ret
}
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
# setwd("/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata")
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
getmonitor <- function(id, directory, summarize = FALSE) {
## 'id' is a vector of length 1 indicating the monitor ID
## number. The user can specify 'id' as either an integer, a
## character, or a numeric.
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'summarize' is a logical indicating whether a summary of
## the data should be printed to the console; the default is
## FALSE
## Your code here
id <- as.integer(id)
if(grep("specdata", directory) == 1){
directory <-  "/Users/Rocela/Desktop/github/R-Programming/Programming-Assignment1/specdata/")
} # "..." is the directory in your computer; masked here for privacy
if(id < 10){
newID <- paste("00", id, sep = "")
fileID <- paste(newID, ".csv", sep = "") # 001.csv
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
} else if(id >= 10 & id <= 99){
newID <- paste("0", id, sep = "")
fileID <- paste(newID, ".csv", sep = "")
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
} else{
fileID <- paste(id, ".csv", sep = "")
fileName <- paste(directory, fileID, sep = "")
data <- read.csv(file = fileName)
}
if(summarize == TRUE){
print(summary(data))
data
} else{
data
}
}
id <- as.integer(id)
len <- length(id)
completedata <- rep(0, len)
j = 1
for(i in id){
data <- getmonitor(i, path)
#sulfatelen <- dim(data[!is.na(data$sulfate), ])[1]
#nitratelen <- dim(data[!is.na(data$nitrate), ])[1]
idlen <- sum(complete.cases(data))
#idlen <- min(sulfatelen, nitratelen)
completedata[j] <- idlen
j <- j + 1
}
ret <- data.frame(id = id, nobs = completedata)
ret
}
